# Copyright (c) 2025 Dell Inc., or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0

# Reusable workflow to perform update of CSI sidecars.
name: CSI Sidecars Update

# Invocable as a reusable workflow
on:
  workflow_call:

jobs:
  csi-sidecars-update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get Latest CSI Sidecar Versions from dell/csm
        id: vars
        run: |
          curl -s https://raw.githubusercontent.com/falfaroc/csm/refs/heads/update-csi-sidecars/config/csm-versions.yaml > versions-content.txt

          # Parse out and save each csi sidecar version
          readarray -t lines < versions-content.txt
          for line in "${lines[@]}"; do
            name=$(echo $line | cut -d: -f1 | tr -d ' ')
            version=$(echo $line | cut -d: -f2 | tr -d ' ')

            if [[ $name == "csi-attacher" ]]; then
              echo "attacher=$version" >> "$GITHUB_OUTPUT"
            elif [[ $name == "csi-provisioner" ]]; then
              echo "provisioner=$version" >> "$GITHUB_OUTPUT"
            elif [[ $name == "csi-snapshotter" ]]; then
              echo "snapshotter=$version" >> "$GITHUB_OUTPUT"
            elif [[ $name == "csi-resizer" ]]; then
              echo "resizer=$version" >> "$GITHUB_OUTPUT"
            elif [[ $name == "csi-node-driver-registrar" ]]; then
              echo "registrar=$version" >> "$GITHUB_OUTPUT"
            elif [[ $name == "csi-external-health-monitor-controller" ]]; then
              echo "health_monitor=$version" >> "$GITHUB_OUTPUT"              
            fi

          done

      - name: CSM docs sidecar update
        # # Uncomment when going into csm-docs.
        # if: ${{ github.repository == 'dell/csm-docs' }}
        if: ${{ github.repository == 'falfaroc/csm-docs' }}
        env:
          attacher: ${{ steps.vars.outputs.attacher }}
          provisioner: ${{ steps.vars.outputs.provisioner }}
          snapshotter: ${{ steps.vars.outputs.snapshotter }}
          resizer: ${{ steps.vars.outputs.resizer }}
          registrar: ${{ steps.vars.outputs.registrar }}
          health_monitor: ${{ steps.vars.outputs.health_monitor }}
        run: |
          echo "We are updating csm docs..."

          declare -A sidecars
          sidecars[csi-attacher]=$attacher
          sidecars[csi-provisioner]=$provisioner
          sidecars[csi-snapshotter]=$snapshotter
          sidecars[csi-resizer]=$resizer
          sidecars[csi-node-driver-registrar]=$registrar
          sidecars[csi-external-health-monitor-controller]=$health_monitor

          update_sidecars_shortcodes() {
            for key in "${!sidecars[@]}"; do
              path="layouts/shortcodes/version-docs.html"
              name=$(echo $key | tr '-' '_')
              version=${sidecars[$key]}
              
              echo "Updating $key to $version"

              shortcode_location=$(grep -r "\"$name.*\" -}}" $path)
              substring=$(echo $shortcode_location | cut -d: -f1)
              partial=$(echo "$substring" | sed -E 's/v[0-9]+\.[0-9]+\.[0-9]+//g')

              sed -i "s/${substring}/${partial}$version/g" $path
            done
          }

          update_sidecars_shortcodes

      # # Needed for signing commits using Github App tokens
      # # See: https://github.com/peter-evans/create-pull-request/blob/main/docs/concepts-guidelines.md#commit-signing
      # - name: Generate GitHub App Token
      #   uses: actions/create-github-app-token@v2.0.6
      #   id: generate-token
      #   with:
      #     app-id: ${{ vars.CSM_RELEASE_APP_ID }}
      #     private-key: ${{ secrets.CSM_RELEASE_APP_PRIVATE_KEY }}

      # # Must enable "allow GitHub Actions to create pull requests" setting
      # # Author defaults to the user who triggered the workflow run
      # - name: Create pull request
      #   uses: peter-evans/create-pull-request@v7
      #   with:
      #     token: ${{ steps.generate-token.outputs.token }}
      #     branch: "update-csi-sidecars"
      #     commit-message: "Update CSI sidecar versions latest"
      #     title: "Update CSI sidecar versions latest"
      #     body: |
      #       Automated update of CSI sidecar versions.

      #       Auto-generated by [common-github-actions](https://github.com/dell/common-github-actions)
      #     sign-commits: true
      #     delete-branch: true
